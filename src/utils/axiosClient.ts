import axios from "axios";
// import { getAccessToken } from "@/utils/auth"; // —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞, –Ω–∞–ª–∞—à—Ç—É–π

export const axiosClient = axios.create({
  baseURL: "/api", // –∞–±–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–ª–∏—à /api
  headers: {
    "Content-Type": "application/json",
  },
  withCredentials: false, // —è–∫—â–æ —Ç—Ä–µ–±–∞ cookie ‚Äî –ø–æ—Å—Ç–∞–≤ true
});

// // üîê –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ –∫–æ–∂–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
// axiosClient.interceptors.request.use(
//   (config) => {
//     const token = getAccessToken(); // —Ç–≤–æ—è –ª–æ–≥—ñ–∫–∞
//     if (token) {
//       config.headers.Authorization = `Bearer ${token}`;
//     }
//     return config;
//   },
//   (error) => Promise.reject(error)
// );

// ‚ùó –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ (–æ–ø—Ü—ñ–π–Ω–æ)
axiosClient.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response?.status === 401) {
      console.warn("Unauthorized - maybe redirect to login");
      // –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –∞–±–æ –æ—á–∏—Å—Ç–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏
    }
    return Promise.reject(error);
  }
);
